#!/usr/bin/env sjs

var dirname = require('path').dirname;
var fs      = require('sjs:nodejs/fs');
var exec    = require('sjs:nodejs/child-process').exec;
var prompt  = require('sjs:debug').prompt;
var argv    = require('sjs:sys').argv;

// make sure we're in the right directory
process.chdir(dirname(argv()[0]));

var sources = getSources();
for (var i=0; i<sources.length; ++i) {
  var src = sources[i];
  if (exec('git status --porcelain '+src.dir).stdout.length) {
    console.log('directory '+src.dir+' not clean -> ignoring');
    continue;
  }
  if (fs.exists(src.dir+'.git')) {
    console.log('directory '+src.dir+' already contains a git repository -> ignoring');
    continue;
  }
  console.log('Replacing directory '+fs.realpath(src.dir)+' with github repository at '+src.repo);
  if (prompt('Sure you want to proceed? [y|N] ').toLowerCase() !== 'y') {
    console.log('Skipping '+fs.realpath(src.dir));
    continue;
  }
  exec('rm -rf '+src.dir);
  console.log('Cloning external repo');
  exec('git clone '+src.repo+' '+src.dir);
  console.log('Checking out revision '+src.commit);
  exec('cd '+src.dir+' && git checkout '+src.commit);
  console.log('Reapplying our patches');
  exec('git checkout -- '+src.dir);
}


// helpers:

function getSources() {
  var src = fs.readFile('sources.txt').toString().split("\n");
  var matches, rv = [];
  for (var i=0; i<src.length; ++i) {
    if ((matches = /^([^#][^ ]*)\s+([^ ]+)\s+([^ ]+)/.exec(src[i])))
      rv.push({dir: matches[1], repo: matches[2], commit: matches[3]});
  }
  return rv;
}
