@ = require('mho:std');
var deployLoopback = @env.get('deployLoopback');
@warn("deployLoopback: #{deployLoopback}");
if (deployLoopback) {
	// for easy testing: cut out the middle-man, and let the browser talk directly to the deployment API
	exports.serverNames = -> [['[loopback]']];
	exports.connect = function(_, block) {
		block(require('../modules/deploy.api'));
	}
} else {
	@ssh = require('./ssh');
	var credentials = {
		'localhost': -> {
			host: 'localhost',
			port: 22,
			username: 'tim',
			//debug: console.log,
			privateKey: @fs.readFile(process.env.HOME + '/.ssh/id_rsa')
		},
	};
	exports.serverNames = -> credentials .. @ownKeys .. @toArray;

	exports.connect = function(name, block) {
		@assert.string(name, "name");
		var creds = (credentials .. @get(name))();
		@ssh.Connect(creds) {|conn|
			//conn .. @ssh.runSeed('/home/tim/dev/oni/conductance') {||
				conn .. @ssh.proxyConnections(7079) {|path|
					@info("Proxied: #{path}");
					var apiInfo = @http.json('http:///deploy.api?format=json', {socketPath: path});
					@info('API INFO:', apiInfo);
					var transport = require('mho:rpc/aat-client').openTransport('http:///', {socketPath: path});
					@info('transport', transport);
					require('mho:rpc/bridge').connect('XXX', {transport: transport, api:apiInfo}) {|conn|
						@info("got remote API", conn);
						block(conn.api);
					}
				}
			//}
		}
	};
}
