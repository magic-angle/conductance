@ = require('mho:std');
@os = require('nodejs:os');

var port = @Port(7072);

exports.serve = function(args) {
	var parser = require('sjs:dashdash').createParser({
		options: [
			{
				name: 'hostname',
				type: 'string',
				help: 'override $hostname',
			},
			{
				names: ['help', 'h'],
				type: 'bool',
			},
			{
				names: ['cors'],
				type: 'bool',
				help: 'allow cors',
				'default': false,
			},
		]
	});
	try {
		var opts = parser.parse(args);
	} catch(e) {
		console.error('Error: ', e.message);
		process.exit(1);
	}

	if (opts.help) {
		console.log("options:\n");
		console.log(parser.help({includeEnv:true}));
		process.exit(0);
	}

	var routes = [
		@route.SystemRoutes(),
		@route.ExecutableDirectory('', @url.normalize('./modules/slave', module.id) .. @url.toPath),
	];
	if (opts.cors) {
		routes = routes .. @route.AllowCORS();
	}

	waitfor {
		@server.run({
			address: port,
			routes: routes,
		});
	} or {
		exports.run_slave(opts.hostname || @os.hostname());
	}
}

@slave = require('seed:job/slave');
exports.run_slave = function(id) {
	@slave.main(@env.get('etcd'), id, exports.url_root);
}

exports.url_root = "http://" + @os.hostname() + ":#{port.port}/";
