@ = require('sjs:std');
@user = require('./user');
@crypto = require('nodejs:crypto');
@verification = require('./verification');
var { @isAuthenticationError } = require('../auth');

exports.validateToken = function(token) {
  var user = @user.authenticate(token);
  return user.id;
};

exports.sendConfirmation = function(username) {
  try {
    var user = @user.getUser(username);
  } catch(e) {
    if (@isAuthenticationError(e)) {
      // errors getting the user should be ignored;
      // as it's trivial to generate requests for users
      // that don't exist
      return;
    }
    throw e;
  }
  @verification.sendConfirmationTo(user);
}

exports.createUser = function(props) {
  var username = props .. @get('username');
  var password = props .. @get('password');
  var email = props .. @get('email');

  props = @verification.initialUserProperties();
  props.email = email;
  var user = @user.create(username, password, props);
  @verification.sendConfirmationTo(user);
  return;
};
